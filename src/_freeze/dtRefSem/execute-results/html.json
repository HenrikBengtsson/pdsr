{
  "hash": "3a27f38a0691d8ec3ed0b234b27c5534",
  "result": {
    "markdown": "# Reference Semantics\n\nMany users new to programming may not have encountered \n[reference semantics](https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_reference) before.\n<br><br>\nThis chapter briefly demonstrates how data.table objects are edited in-place.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\n```\n:::\n\n\n## Get object's location in memory with `address()`\n\nWhen you add a new column to an existing data.frame, the data.frame is copied \nbehind the scenes - you can tell because its memory address, where it's \nphysically stored in your computer, changes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- data.frame(alpha = 1:5, beta = 11:15)\naddress(df1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0x12c9b0008\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndf1$gamma <- df1$alpha + df1$beta\naddress(df1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0x12a034d08\"\n```\n\n\n:::\n:::\n\n\nWhen you add a new column in a data.table ***in-place***, the data.table\nobject's address remains unchanged:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt1 <- data.table(alpha = 1:5, beta = 11:15)\naddress(dt1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0x12c0f8800\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndt1[, gamma := alpha + beta]\naddress(dt1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0x12c0f8800\"\n```\n\n\n:::\n:::\n\n\n### Reference semantics at work\n\nUp to now, you are likely used to working with regular R objects that behave \nlike this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- data.frame(a = rep(1, 5))\ndf1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  a\n1 1\n2 1\n3 1\n4 1\n5 1\n```\n\n\n:::\n\n```{.r .cell-code}\ndf2 <- df1\ndf2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  a\n1 1\n2 1\n3 1\n4 1\n5 1\n```\n\n\n:::\n\n```{.r .cell-code}\ndf2$a <- df2$a*2\ndf2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  a\n1 2\n2 2\n3 2\n4 2\n5 2\n```\n\n\n:::\n\n```{.r .cell-code}\ndf1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  a\n1 1\n2 1\n3 1\n4 1\n5 1\n```\n\n\n:::\n\n```{.r .cell-code}\naddress(df1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0x14adf7200\"\n```\n\n\n:::\n\n```{.r .cell-code}\naddress(df2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0x12c01d820\"\n```\n\n\n:::\n:::\n\n\n`data.table` uses \"reference semantics\" or \"pass-by-reference\". Be careful \nor you might get confused:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt1 <- data.table(a = rep(1, 5))\ndt1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       a\n   <num>\n1:     1\n2:     1\n3:     1\n4:     1\n5:     1\n```\n\n\n:::\n\n```{.r .cell-code}\ndt2 <- dt1\ndt2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       a\n   <num>\n1:     1\n2:     1\n3:     1\n4:     1\n5:     1\n```\n\n\n:::\n\n```{.r .cell-code}\ndt2[, a := a * 2]\ndt2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       a\n   <num>\n1:     2\n2:     2\n3:     2\n4:     2\n5:     2\n```\n\n\n:::\n\n```{.r .cell-code}\ndt1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       a\n   <num>\n1:     2\n2:     2\n3:     2\n4:     2\n5:     2\n```\n\n\n:::\n\n```{.r .cell-code}\naddress(dt1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0x10a01be00\"\n```\n\n\n:::\n\n```{.r .cell-code}\naddress(dt2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0x10a01be00\"\n```\n\n\n:::\n:::\n\n\n::: callout-important\nIf you want to create a copy of a data.table, use `copy()`.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt3 <- copy(dt1)\ndt3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       a\n   <num>\n1:     2\n2:     2\n3:     2\n4:     2\n5:     2\n```\n\n\n:::\n\n```{.r .cell-code}\naddress(dt3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0x1286e0a00\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndt3[, a := a * 2]\ndt3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       a\n   <num>\n1:     4\n2:     4\n3:     4\n4:     4\n5:     4\n```\n\n\n:::\n\n```{.r .cell-code}\ndt1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       a\n   <num>\n1:     2\n2:     2\n3:     2\n4:     2\n5:     2\n```\n\n\n:::\n:::\n\n\n## Resources\n\n- [data.table Reference Semantics](https://cran.r-project.org/web/packages/data.table/vignettes/datatable-reference-semantics.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}