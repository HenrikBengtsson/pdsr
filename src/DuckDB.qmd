# DuckDB {sec-duckdb}

```{r}
library(DBI)
library(data.table)
```

## Setup Connection

By default, `connect()`'s `database` argument defaults to `:memory:`, creating a non-persistent, in-memory object.

```{r}
con <- dbConnect(duckdb::duckdb())
```

## Settings

```{r}
dbExecute(con, "PRAGMA enable_progress_bar;")
```

## Read CSV

Directly read into data.frame
```{r}
ir <- dbGetQuery(con, 
    "SELECT * FROM read_csv_auto('~/icloud/Data/iris.csv');"
)
head(ir)
```

Create a DuckDB table that can be queried

```{r}
dbExecute(con,
    "CREATE TABLE iris AS SELECT * FROM '~/icloud/Data/iris.csv';"
)
```

```{r}
dbGetQuery(con, "PRAGMA show_tables;")
```

Filter

```{r}
dbGetQuery(con,
    "SELECT * FROM iris WHERE Species in ('setosa', 'versicolor')")
```

```{r}
dbExecute(con,
    "
    CREATE TABLE ir AS SELECT * FROM 
    read_csv_auto('/Users/egenn/icloud/Data/iris.csv', 
    delim=',', header=True);
    "
)
```

### Fetch data to data.frame

```{r}
ir = dbGetQuery(con, "SELECT * from iris")
head(ir)
```

```{r}
class(ir)
```

### Fetch data to data.table:

```{r}
ir = dbGetQuery(con, "SELECT * from iris")
setDT(ir)
```

```{r}
class(ir)
head(ir)
```


## Resources

- [DuckDB CSV](https://duckdb.org/docs/data/csv)
