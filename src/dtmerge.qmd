# Merge tables {#sec-dtmerge}

```{r}
library(data.table)
```

`data.table` allows you to perform table joins with either:
- the base `merge()` function using the same syntax as for data.frame objects or 
- the "data.table way" using bracket notation:

```{r}
a <- data.table(PID = c(1:9),
                Hospital = c("UCSF", "HUP", "Stanford", 
                             "Stanford", "UCSF", "HUP", 
                             "HUP", "Stanford", "UCSF"),
                Age = c(22, 34, 41, 19, 53, 21, 63, 22, 19),
                Sex = c(1, 1, 0, 1, 0, 0, 1, 0, 0),
                key = "PID")
a

b <- data.table(PID = c(6:12),
                V1 = c(153, 89, 112, 228,  91, 190, 101),
                Department = c("Neurology", "Radiology", "Emergency",
                               "Cardiology", "Surgery", "Neurology",
                               "Psychiatry"),
                key = "PID")
b
```

In the above command we use the `key` argument to set `PID` as key. This can be 
performed after the `data.table` has been created using the `setkey()` command:

```{r}
setkey(a, PID)
```

Multiple keys can be set, in order, with the same `setkey()` command, separated 
by commas, e.g.:

```{r}
setkey(a, PID, Hospital)
```

Keys sort the data.table by the corresponding columns and can be used to 
perform left and right joins with bracket notation seen later.

## Inner

```{r}
merge(a, b)
```

## Outer

```{r}
merge(a, b, all = TRUE)
```

## Left outer

Using `merge()`:

```{r}
merge(a, b, all.x = TRUE)
```

Using bracket notation:

```{r}
b[a, ]
```

If keys were not set for a and b, you could specify the column to match on 
using the `on` argument:

```{r}
b[a, on = "PID"]
```

```{block, type="rmdnote"}
The easy way to understand the bracket notation merges is to think that the 
data.table inside the bracket is used to index the data.table on the outside, 
therefore the resulting table will have rows dictated by the inside table's key.
```

## Right outer

```{r}
merge(a, b, all.y = TRUE)
```

Using bracket notation:

```{r}
a[b, ]
```
